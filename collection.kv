# All classes related to the end game screen

<TutorialScreen@Widget>
    ScreenManager:
        id: tutorialScreens
        Screen:
            id: tutorial
            name: 'tutorial1'
            BoxLayout:
                orientation: 'vertical'
                padding: 10
                Label: 
                    size_hint: (1, .15)
                    text: 'How To Play Collection'
                    font_size:40
                    font_name: 'DroidSans'
                    markup: True
                    size: 100,100
                    #pos: (root.width-100)/2, root.height-100
                Label: 
                    size_hint: (1, .7)
                    text: 'Welcome to Collection! \n \n To get started, click on the number of players. \n After entering your names, you will be taken to the game screen, \n where 12 set cards have been dealt. \n \n Try to find a COLLECTION.  Once you find one, \n click on the three cards one by one. \n If you have found a Collection, \n you will be able to choose your name \n to receive points for your Collection.  \n Play continues until the deck runs out of cards. Playing with several players, the one who found the most Collections, is the winner. \n To learn what constitutes a Collection, \n go to the next tutorial screen.'
                    font_name: 'DroidSans'
                    markup: True
                    size: 100,100
                    #pos: (root.width-100)/2, root.height-200
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: (1,.1)
                    spacing: 5
                    AnchorLayout:
                        size_hint:(.3,1)
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            text: 'Back to Main Screen'
                            size_hint: .9, 1
                            on_press: root.goToGameScreen() if root.active else root.goToIntro()
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'right'
                            anchor_y: 'top'
                            text: 'Next: what is a Collection?'
                            size_hint: .9, 1
                            on_press: tutorialScreens.current = 'tutorial2'
        Screen:
            id: tutorial2
            name: 'tutorial2'
            BoxLayout:
                orientation: 'vertical'
                padding: 10
                Label: 
                    size_hint: (1, .15)
                    text: 'What is a Collection'
                    font_size:40
                    font_name: 'DroidSans'
                    markup: True
                    size: 100,100
                    #pos: (root.width-100)/2, root.height-100
                Label: 
                    size_hint: (1, .7)
                    text: 'The cards have four properties: quantity, shape, filling and color. A Collection contains three cards, which properties are all equal or all different. In the following, you see some examples for Collections.\n In the first example the quantity, the color and the shape are equal, the filling is all different: includegraphic{images/2311.png} \ includegraphics{images/2321.png}\ \includegraphics{2331.png} \n In the second example the color and the filling are equal, the quantity and the shape are all different: includegraphic{images/1221.png} \ includegraphics{images/3223.png}\ \includegraphics{2222.png} \n Next, the color is equal and all other properties are different: includegraphic{images/2333.png} \ includegraphics{images/1321.png}\ \includegraphics{3312.png} \n Last all properties are different: includegraphic{images/3122.png} \ includegraphics{images/1313.png}\ \includegraphics{2231.png}'
                    font_name: 'DroidSans'
                    markup: True
                    size: 100,100
                    #pos: (root.width-100)/2, root.height-200
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: (1,.1)
                    spacing: 5
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            text: 'Back to instruction page'
                            size_hint: .9, 1
                            on_press: tutorialScreens.current = 'tutorial1'
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            text: 'Back to Main Screen'
                            size_hint: .9, 1
                            on_press: root.goToGameScreen() if root.active else root.goToIntro()
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'right'
                            anchor_y: 'top'
                            text: 'Next: Examples of Sets'
                            size_hint: .9, 1
                            on_press: tutorialScreens.current = 'tutorial3'
        Screen:
            id: tutorial3
            name: 'tutorial3'
            BoxLayout:
                orientation: 'vertical'
                padding: 10
                Label: 
                    size_hint: (1, .15)
                    text: 'Tutorial'
                    font_size:40
                    font_name: 'DroidSans'
                    markup: True
                    size: 100,100
                    #pos: (root.width-100)/2, root.height-100
                Label: 
                    size_hint: (1, .7)
                    text: 'Examples here'
                    font_name: 'DroidSans'
                    markup: True
                    size: 100,100
                    #pos: (root.width-100)/2, root.height-200
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: (1,.1)
                    spacing: 5
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            text: 'Back to description page'
                            size_hint: .9, 1
                            on_press: tutorialScreens.current = 'tutorial2'
                    AnchorLayout:
                        size_hint:(.3,1)
                        Button:
                            anchor_x: 'center'
                            anchor_y: 'top'
                            text: 'Back to Main Screen'
                            size_hint: .9, 1
                            on_press: root.goToGameScreen() if root.active else root.goToIntro()
                    AnchorLayout:
                        size_hint:(.3,1)
# All classes related to the game play screen

#: import Deck Deck.Deck

<CardToggle>:
    background_normal: root.card.normalimage() if root.card else ''   
    background_down: root.card.downimage() if root.card else ''   
    canvas.before:
        PushMatrix
        Rotate:
            angle: self.angle
            origin: self.center
    canvas.after:
        PopMatrix

<SelectPlayersPopup@Popup>:
    size_hint: 1, 1
    separator_height: 0
    title: 'Who found the collection?'

<ScoreLabel@Label>:
    color: 0, 0, 0, 1
    font_size: '20sp'
    halign: 'center'
    
<GamePlayScreen@Screen>:
    id: mainpage
    name: 'screen2'
    canvas.before:
        Color:
            rgba: 173/255. , 255/255., 47/255., 0.8
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: "vertical"
        BoxLayout:
            orientation: "horizontal"
            ScoreLabel:
                value: 0
                text: root.name_of_players[self.value] + ':\n'+ str(root.scores_of_players[self.value]) if root.number_of_players >= self.value + 1 else ''
            BoxLayout:
                orientation: "vertical"           
                ScoreLabel:
                    text: str(Deck.numberOfSets(root.cards)) + " collections on the board" 
                ScoreLabel:
                    text: "AI: " + str(root.aiScore) if root.aiActivated else ""
            ScoreLabel:
                value: 1 
                text: root.name_of_players[self.value] + ':\n'+ str(root.scores_of_players[self.value]) if root.number_of_players >= self.value + 1 else ''
        GridLayout:
            id: cards_layout
            cols: 4
            size_hint_y: 3
            spacing: '10dp'
            halign: 'center'
            padding: '10dp'
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:
            CardToggle:

        BoxLayout:
            orientation: "horizontal"
            ScoreLabel:  
                value: 2
                text: root.name_of_players[self.value] + ':\n'+ str(root.scores_of_players[self.value]) if root.number_of_players >= self.value + 1 else ''
            BoxLayout:
                orientation: "vertical"
                Label:
                    text: ""
                Button:
                    id: settingsButton
                    text: 'Settings'
                    background_color: 102/255., 102/255., 0/255., 0.8
                    size_hint_y: 0.8
                    halign: 'center'
                    on_press:
                        root.stopClocks()
                        app.open_settings()
            ScoreLabel:
                value: 3
                text: root.name_of_players[self.value] + ':\n'+ str(root.scores_of_players[self.value]) if root.number_of_players >= self.value + 1 else ''
# All classes related to the end game screen

<Scores@Label>:
    size_hint: (None, None)
    markup: True
    size: 100,100
    x: 350
    font_size: '30sp'
    size_hint_y: None
    height: self.texture_size[1] + dp(10) 
    spacing: '5dp'

<EndGameScreen>:
    Label:
        size_hint: (None, None)
        text: 'Game Over'
        font_size:40
        font_name: 'DroidSans'
        pos: (root.width-100)/2, root.height-100
    Button:
        text: 'Back to Main Screen'
        size_hint: (None,None)
        pos: (root.width-200)/2., root.height/5-100.
        size: 200,100
        on_press: root.screenManager.current = 'screen1'
    Scores:
        text: root.name_of_players[0]+ ':      ' + str(root.scores_of_players[0]) if root.number_of_players>=1 else ''
        y: root.height-300
    Scores:
        text: root.name_of_players[1]+ ':      ' + str(root.scores_of_players[1]) if root.number_of_players >= 2 else ''
        y: root.height-350
    Scores:
        text: root.name_of_players[2]+ ':      ' + str(root.scores_of_players[2]) if root.number_of_players>=3 else ''
        y: root.height-400
    Scores:
        text: root.name_of_players[3]+ ':      ' + str(root.scores_of_players[3]) if root.number_of_players==4 else ''
        y: root.height-450

<PlayerNamePopup@Popup>:
    size_hint: .5, .5
    title: 'Enter Name of the Players'
    title_size: '20sp'
    separator_height: 5
    BoxLayout:
        orientation: 'vertical'
        size_hint_y: 0.8
        size_hint_x: 0.5
        spacing: 10
        GridLayout:
            id: content
            spacing: '20dp'        
            cols: 2
            spacing:'10dp'
        Button:
            text:'Start Game'
            size_hint_y: None
            height: '40dp'
            on_press: root.dismiss()

<PlayerNameEdit@Popup>:
    title: "Enter Name here"
    size_hint: (0.25, 0.25)
    GridLayout:
        cols: 1
        TextInput:
            id: textinput
            focus: True
            text: root.nameText
            multiline: False
        Button:
            text: "Enter name:"
            on_press: root.dismiss()

# All classes related to the intro screen

<PlayerSection@Button>:
    value: 0
    font_size: '30sp'
    text: str(self.value) + ' Players' if self.value > 1 else '1 Player'

<CollectionTitle@Label>:
    text: '[color=ff3333]Col[/color][color=3333ff]lec[/color][color=33ff33]tion[/color]'
    markup: True
    font_size: '40sp'

<GameLayout>:
    id: screenManager
    Screen:
        id: frontpage
        name: 'screen1'
        BoxLayout:
            orientation: "vertical"
            CollectionTitle:       
            GridLayout:
                size_hint_y: 3
                cols: 2
                spacing: '30dp'
                padding: '30dp'
                PlayerSection:
                    value: 1
                    on_press: root.goToGameScreen()
                PlayerSection:
                    value: 2
                    on_press: root.player_name_popup(2)
                PlayerSection:
                    value: 3
                    on_press: root.player_name_popup(3)
                PlayerSection:
                    value: 4
                    on_press: root.player_name_popup(4)  
            BoxLayout:
                Widget:
                BoxLayout:
                    orientation: "vertical"
                    Widget:
                    Button:
                        text: 'Settings'
                        size_hint_y: 0.8
                        on_press: app.open_settings()
                Widget:
    GamePlayScreen:
        goToIntro: root.goToIntro
        number_of_players: root.number_of_players
        name_of_players: root.name_of_players
        scores_of_players: root.scores_of_players
        game: root
        active: root.active
    EndGameScreen:
        id: gameoverpage
        name: 'screen3'
        name_of_players: root.name_of_players
        scores_of_players: root.scores_of_players
        screenManager: root
        number_of_players: root.number_of_players
        game: root
    Screen:
        name: 'tutorialFlow'
        TutorialScreen:
            goToIntro: root.goToIntro
            active: root.active
            goToGameScreen: root.goToGameScreen
